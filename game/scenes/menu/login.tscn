[gd_scene load_steps=16 format=2]

[ext_resource path="res://assets/fonts/body.tres" type="DynamicFont" id=2]
[ext_resource path="res://assets/fonts/default.tres" type="DynamicFont" id=3]
[ext_resource path="res://assets/fonts/default-small.tres" type="DynamicFont" id=4]
[ext_resource path="res://assets/ui/menu/logo.png" type="Texture" id=5]
[ext_resource path="res://data/menu/version_info.tres" type="Resource" id=6]
[ext_resource path="res://data/menu/subtitle_options.tres" type="Resource" id=7]
[ext_resource path="res://assets/ui/menu/backgrounds/1.png" type="Texture" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends Label

export(Resource) var _subtitle_options

export(float) var _size_spring = 2
export(float) var _size_k = 20

export(float) var _rot_spring = 100
export(float) var _rot_k = 20
export(float) var _rot_dampen = 0.1

var _v_size = 0
var _v_rot = 0

func _get_configuration_warning() -> String:
	if not (_subtitle_options is SubtitleOptions):
		return \"subtitle_options must be a SubtitleOptins\"
	return \"\"

func _ready() -> void:
	_update_subtitle()

func _gui_input(event: InputEvent) -> void:
	if event is InputEventMouseButton: 
		if event.pressed and event.button_index == BUTTON_LEFT:
			_update_subtitle()

func _update_subtitle() -> void:
	_pop(_subtitle_options.get_title(text))

func _pop(new_text: String) -> void:
	set_text(new_text)
	rect_scale = Vector2.ONE
	rect_rotation = 0
	rect_pivot_offset = rect_size / 2
	_v_size = _size_spring
	_v_rot = _rot_spring * pow(-1, randi() % 2)

func _process(delta: float) -> void:
	rect_scale += Vector2.ONE * _v_size * delta
	rect_rotation += _v_rot * delta
	
	_v_size -= _size_k * (rect_scale.x - 1) * delta
	_v_rot -= _rot_k * (rect_rotation) * delta
	
	if rect_scale.x < 1:
		rect_scale = Vector2.ONE
	rect_rotation *= pow(_rot_dampen, delta)
"

[sub_resource type="GDScript" id=6]
script/source = "extends VBoxContainer

export(NodePath) var _error_dialog_path
onready var _error_dialog: WindowDialog = get_node(_error_dialog_path)

onready var _guest_login: Node = $GuestLogin
onready var _spb_login: Node = $UserLogin

onready var _http: HTTPRequest = $HTTPRequest

func _ready() -> void:
	assert(
		_guest_login.connect(\"attempt_login\", self, \"_on_attempt_login\") == OK)
	assert(
		_spb_login.connect(\"attempt_login\", self, \"_on_attempt_login\") == OK)
	assert(
		_spb_login.connect(
			\"attempt_register\", self, \"_on_attempt_register\") == OK)
	
	assert(
		_http.connect(\"request_completed\", self, \"_on_request_completed\") == OK)


func _on_attempt_login(type: String, body: Dictionary) -> void:
	var auth_uri: String = \"%s/login/%s\" % [Connection.addresses().auth, type]
	var error = _http.request(auth_uri, [], true, HTTPClient.METHOD_POST,
		JSON.print(body))
	if error != OK:
		_error_dialog.show_error(0, \"Error submitting login request...\")


func _on_attempt_register(type: String, body: Dictionary) -> void:
	var auth_uri: String = \"%s/register/%s\" % [Connection.addresses().auth, type]
	var error = _http.request(auth_uri, [], true, HTTPClient.METHOD_POST,
		JSON.print(body))
	if error != OK:
		_error_dialog.show_error(0, \"Error submitting register request...\")


func _on_request_completed(result, response_code, _headers, body) -> void:
	if result != HTTPRequest.RESULT_SUCCESS:
		_error_dialog.show_error(result, \"Error submitting HTTP request.\")
		return

	var res := JSON.parse(body.get_string_from_utf8())
	if response_code != HTTPClient.RESPONSE_OK:
		if res.error == OK and \"spb_error\" in res.result:
			_error_dialog.show_error(\"error\", response_code, res.result.spb_error)
		else:
			_error_dialog.show_error(\"error\", response_code,
				\"Unknown authentication error.\")
		return
	
	print(res.result.jwt)
"

[sub_resource type="GDScript" id=4]
script/source = "extends MarginContainer

signal attempt_login(type, body)

onready var _guest_name: LineEdit = $VBoxContainer/GuestName
onready var _login_button: Button = $VBoxContainer/Login

func _ready() -> void:
	assert(_login_button.connect(\"button_up\", self, \"_on_login\") == OK)


func _on_login() -> void:
	var body := {
		\"name\": _guest_name.text
	}
	emit_signal(\"attempt_login\", \"guest\", body)
"

[sub_resource type="GDScript" id=7]
script/source = "extends MarginContainer

signal attempt_login(type, body)
signal attempt_register(type, body)

export(NodePath) var _register_dialog_path
onready var _register_dialog: WindowDialog = get_node(_register_dialog_path)

onready var _email_field: LineEdit = $VBoxContainer/Email
onready var _password_field: LineEdit = $VBoxContainer/Password
onready var _login_button: Button = $VBoxContainer/HBoxContainer/Login
onready var _register_button: Button = $VBoxContainer/HBoxContainer/Register

func _ready() -> void:
	assert(_login_button.connect(\"button_up\", self, \"_on_login\") == OK)
	assert(
		_register_button.connect(\"button_up\", _register_dialog, \"popup\") == OK)
	
	assert(
		_register_dialog.connect(
			\"attempt_register\", self, \"_on_attempt_register\") == OK)


func _on_login() -> void:
	var body := {
		\"email\": _email_field.text,
		\"password\": _password_field.text,
	}
	emit_signal(\"attempt_login\", \"spb\", body)


func _on_attempt_register(email: String, username: String, password: String) -> void:
	emit_signal(\"attempt_register\", \"spb\", {
		\"email\": email,
		\"username\": username,
		\"password\": password,
	})
"

[sub_resource type="GDScript" id=2]
script/source = "extends MarginContainer

const NewsItem: PackedScene = preload(\"res://scenes/menu/news_item.tscn\")

onready var _container: VBoxContainer = (
	$Panel/VBoxContainer/ScrollContainer/VBoxContainer)


func _ready():
	assert($HTTPRequest.connect(\"request_completed\", self, \"_on_request_completed\") == OK)
	$HTTPRequest.request(\"%s/news\" % Connection.addresses().auth)


func _on_request_completed(_result, response_code, _headers, body) -> void:
	for news_item_node in _container.get_children():
		news_item_node.queue_free()
	
	if response_code != 200:
		_make_news(\"Error\", \"\", \"Error loading news.\")
		return
	var news = JSON.parse(body.get_string_from_utf8()).result
	
	if news.empty():
		_make_news(\"No news!\", \"\", \"Good news?\")
		return

	for news_item in news:
		_make_news(news_item.title, news_item.date, news_item.content)


func _make_news(title: String, date: String, content: String) -> void:
	var news_item = NewsItem.instance().init(title, date, content)
	_container.add_child(news_item)


func _show_error(text: String) -> void:
	_make_news(\"Error\", \"\", text)
"

[sub_resource type="GDScript" id=3]
script/source = "extends Label

export(Resource) var version_info

func _get_configuration_warning():
	if not (version_info is VersionInfo):
		return \"version_info must be a VersionInfo\"
	return \"\"

func _ready():
	var major = version_info.major
	var minor = version_info.minor
	var patch = version_info.patch
	var adjective = version_info.adjective
	var codename = version_info.codename
	set_text(\"v%d.%d.%d - %s %s\" % [major, minor, patch, adjective, codename])
"

[sub_resource type="GDScript" id=5]
script/source = "extends WindowDialog


func _ready() -> void:
	assert(
		$MarginContainer/VBoxContainer/Button.connect(
			\"button_up\", self, \"hide\") == OK)


func show_error(code: int, message: String) -> void:
	if code > 0:
		window_title = \"Error %d\" % code
	else:
		window_title = \"Error!\"
	
	$MarginContainer/VBoxContainer/Label.text = message
	
	popup()
"

[sub_resource type="GDScript" id=8]
script/source = "extends WindowDialog

signal attempt_register(email, name, password)

export(NodePath) var _error_dialog_path
onready var _error_dialog: WindowDialog = get_node(_error_dialog_path)

onready var _email: LineEdit = $MarginContainer/VBoxContainer/Email
onready var _name: LineEdit = $MarginContainer/VBoxContainer/Name
onready var _password1: LineEdit = $MarginContainer/VBoxContainer/HBoxContainer/Password1
onready var _password2: LineEdit = $MarginContainer/VBoxContainer/HBoxContainer/Password2

onready var _register: Button = $MarginContainer/VBoxContainer/Register

func _ready() -> void:
	assert(_register.connect(\"button_up\", self, \"_on_register\") == OK)

func show_register(email: String, password: String) -> void:
	_email.text = email
	_password1.text = password
	popup()
	

func _on_register() -> void:
	if _password1.text != _password2.text:
		_error_dialog.show_error(0,
			\"Registration error: Passwords don't match!\")
	
	emit_signal(\"attempt_register\", _email.text, _name.text, _password1.text)
"

[node name="Menu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" type="TextureRect" parent="."]
modulate = Color( 1, 1, 1, 0.27451 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 8 )
expand = true
stretch_mode = 7
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Main" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = 10.0
margin_right = -10.0
margin_bottom = -10.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Header" type="VBoxContainer" parent="Main"]
margin_right = 1004.0
margin_bottom = 143.0

[node name="LogoContainer" type="CenterContainer" parent="Main/Header"]
margin_right = 1004.0
margin_bottom = 119.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Logo" type="TextureRect" parent="Main/Header/LogoContainer"]
margin_left = 389.0
margin_right = 615.0
margin_bottom = 119.0
rect_min_size = Vector2( 226, 119 )
texture = ExtResource( 5 )
expand = true

[node name="Subtitle" type="Label" parent="Main/Header"]
margin_left = 464.0
margin_top = 123.0
margin_right = 539.0
margin_bottom = 143.0
mouse_filter = 1
mouse_default_cursor_shape = 2
size_flags_horizontal = 4
custom_fonts/font = ExtResource( 3 )
text = "subtitle"
align = 1
uppercase = true
script = SubResource( 1 )
_subtitle_options = ExtResource( 7 )

[node name="Content" type="HBoxContainer" parent="Main"]
margin_top = 147.0
margin_right = 1004.0
margin_bottom = 580.0
size_flags_vertical = 3

[node name="CenterContainer" type="CenterContainer" parent="Main/Content"]
margin_right = 500.0
margin_bottom = 433.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Login" type="VBoxContainer" parent="Main/Content/CenterContainer"]
margin_left = 150.0
margin_top = 68.0
margin_right = 350.0
margin_bottom = 364.0
rect_min_size = Vector2( 200, 0 )
size_flags_horizontal = 3
script = SubResource( 6 )
_error_dialog_path = NodePath("../../../../ErrorDialog")

[node name="HTTPRequest" type="HTTPRequest" parent="Main/Content/CenterContainer/Login"]

[node name="GuestLogin" type="MarginContainer" parent="Main/Content/CenterContainer/Login"]
margin_right = 200.0
margin_bottom = 95.0
size_flags_horizontal = 3
script = SubResource( 4 )

[node name="VBoxContainer" type="VBoxContainer" parent="Main/Content/CenterContainer/Login/GuestLogin"]
margin_right = 200.0
margin_bottom = 95.0
size_flags_horizontal = 3
custom_constants/separation = 15

[node name="GuestName" type="LineEdit" parent="Main/Content/CenterContainer/Login/GuestLogin/VBoxContainer"]
margin_right = 200.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
placeholder_text = "Guest Name"

[node name="Login" type="Button" parent="Main/Content/CenterContainer/Login/GuestLogin/VBoxContainer"]
margin_top = 55.0
margin_right = 200.0
margin_bottom = 95.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = ExtResource( 3 )
text = "Login as Guest"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="UserLogin" type="MarginContainer" parent="Main/Content/CenterContainer/Login"]
margin_top = 99.0
margin_right = 200.0
margin_bottom = 296.0
custom_constants/margin_top = 15
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}
_register_dialog_path = NodePath("../../../../../Register")

[node name="VBoxContainer" type="VBoxContainer" parent="Main/Content/CenterContainer/Login/UserLogin"]
margin_top = 15.0
margin_right = 200.0
margin_bottom = 197.0
custom_constants/separation = 15

[node name="Label" type="Label" parent="Main/Content/CenterContainer/Login/UserLogin/VBoxContainer"]
margin_right = 200.0
margin_bottom = 17.0
custom_fonts/font = ExtResource( 4 )
text = "or"
align = 1

[node name="Email" type="LineEdit" parent="Main/Content/CenterContainer/Login/UserLogin/VBoxContainer"]
margin_top = 32.0
margin_right = 200.0
margin_bottom = 72.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = ExtResource( 3 )
placeholder_text = "Email"

[node name="Password" type="LineEdit" parent="Main/Content/CenterContainer/Login/UserLogin/VBoxContainer"]
margin_top = 87.0
margin_right = 200.0
margin_bottom = 127.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = ExtResource( 3 )
secret = true
placeholder_text = "Password"

[node name="HBoxContainer" type="HBoxContainer" parent="Main/Content/CenterContainer/Login/UserLogin/VBoxContainer"]
margin_top = 142.0
margin_right = 200.0
margin_bottom = 182.0
custom_constants/separation = 10
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Login" type="Button" parent="Main/Content/CenterContainer/Login/UserLogin/VBoxContainer/HBoxContainer"]
margin_right = 95.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
text = "Login"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Register" type="Button" parent="Main/Content/CenterContainer/Login/UserLogin/VBoxContainer/HBoxContainer"]
margin_left = 105.0
margin_right = 200.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
text = "Register"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="News" type="MarginContainer" parent="Main/Content"]
modulate = Color( 1, 1, 1, 0.776471 )
margin_left = 504.0
margin_right = 1004.0
margin_bottom = 433.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 20
custom_constants/margin_top = 20
custom_constants/margin_left = 20
custom_constants/margin_bottom = 20
script = SubResource( 2 )

[node name="Panel" type="PanelContainer" parent="Main/Content/News"]
margin_left = 20.0
margin_top = 20.0
margin_right = 480.0
margin_bottom = 413.0

[node name="VBoxContainer" type="VBoxContainer" parent="Main/Content/News/Panel"]
margin_left = 7.0
margin_top = 7.0
margin_right = 453.0
margin_bottom = 386.0
size_flags_horizontal = 3
custom_constants/separation = 10

[node name="Header" type="Label" parent="Main/Content/News/Panel/VBoxContainer"]
margin_right = 446.0
margin_bottom = 16.0
custom_fonts/font = ExtResource( 2 )
text = "NEWS"
align = 1

[node name="ScrollContainer" type="ScrollContainer" parent="Main/Content/News/Panel/VBoxContainer"]
margin_top = 26.0
margin_right = 446.0
margin_bottom = 379.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="Main/Content/News/Panel/VBoxContainer/ScrollContainer"]
margin_right = 446.0
margin_bottom = 353.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/separation = 25

[node name="HTTPRequest" type="HTTPRequest" parent="Main/Content/News"]

[node name="Version" type="Label" parent="."]
anchor_right = 0.191406
anchor_bottom = 1.0
margin_left = 10.0
margin_bottom = -5.0
text = "version string"
valign = 2
script = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}
version_info = ExtResource( 6 )

[node name="ErrorDialog" type="WindowDialog" parent="."]
anchor_left = 0.35
anchor_top = 0.4
anchor_right = 0.65
anchor_bottom = 0.65
custom_fonts/title_font = ExtResource( 4 )
popup_exclusive = true
window_title = "Error!"
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MarginContainer" type="MarginContainer" parent="ErrorDialog"]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/margin_right = 10
custom_constants/margin_top = 10
custom_constants/margin_left = 10
custom_constants/margin_bottom = 10
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="ErrorDialog/MarginContainer"]
margin_left = 10.0
margin_top = 10.0
margin_right = 297.0
margin_bottom = 140.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="ErrorDialog/MarginContainer/VBoxContainer"]
margin_right = 287.0
margin_bottom = 86.0
size_flags_vertical = 3
custom_fonts/font = ExtResource( 2 )
text = "Test Error Content"
align = 1
valign = 1
autowrap = true

[node name="Button" type="Button" parent="ErrorDialog/MarginContainer/VBoxContainer"]
margin_top = 90.0
margin_right = 287.0
margin_bottom = 130.0
rect_min_size = Vector2( 120, 40 )
size_flags_vertical = 4
custom_fonts/font = ExtResource( 3 )
text = "OK"

[node name="Register" type="WindowDialog" parent="."]
anchor_left = 0.3
anchor_top = 0.35
anchor_right = 0.7
anchor_bottom = 0.35
margin_bottom = 192.0
custom_fonts/title_font = ExtResource( 4 )
popup_exclusive = true
window_title = "Register"
script = SubResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}
_error_dialog_path = NodePath("../ErrorDialog")

[node name="MarginContainer" type="MarginContainer" parent="Register"]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/margin_right = 10
custom_constants/margin_top = 10
custom_constants/margin_left = 10
custom_constants/margin_bottom = 10
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="Register/MarginContainer"]
margin_left = 10.0
margin_top = 10.0
margin_right = 399.0
margin_bottom = 182.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Email" type="LineEdit" parent="Register/MarginContainer/VBoxContainer"]
margin_right = 389.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = ExtResource( 3 )
align = 1
placeholder_text = "Email Address"

[node name="Name" type="LineEdit" parent="Register/MarginContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 389.0
margin_bottom = 84.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = ExtResource( 3 )
align = 1
placeholder_text = "Username"

[node name="HBoxContainer" type="HBoxContainer" parent="Register/MarginContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 389.0
margin_bottom = 128.0

[node name="Password1" type="LineEdit" parent="Register/MarginContainer/VBoxContainer/HBoxContainer"]
margin_right = 192.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
secret = true
placeholder_text = "Password"

[node name="Password2" type="LineEdit" parent="Register/MarginContainer/VBoxContainer/HBoxContainer"]
margin_left = 196.0
margin_right = 389.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
secret = true
placeholder_text = "Confirm Password"

[node name="Register" type="Button" parent="Register/MarginContainer/VBoxContainer"]
margin_left = 134.0
margin_top = 132.0
margin_right = 254.0
margin_bottom = 172.0
rect_min_size = Vector2( 120, 40 )
size_flags_horizontal = 4
custom_fonts/font = ExtResource( 3 )
text = "Register"
